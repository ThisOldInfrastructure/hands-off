#!/usr/bin/perl

use Newt qw(:colorsets NEWT_FLAG_BORDER NEWT_FLAG_MULTIPLE NEWT_FLAG_SCROLL NEWT_ANCHOR_LEFT NEWT_ANCHOR_RIGHT NEWT_GRID_FLAG_GROWX NEWT_GRID_FLAG_GROWY NEWT_KEY_F12 NEWT_KEY_F11 NEWT_EXIT_HOTKEY);

$newnetwork = "" ;
$newbcast = "" ;
$newnetmask = "255.255.0.0" ;
$newdomain = "lbwf.gov.uk" ;

sub suspend_cb {
  Newt::Suspend();
  kill STOP => $$;
  Newt::Resume();
}

sub hostlookup {
  my($host) = @_ ;

  use Net::DNS;
  my $res   = Net::DNS::Resolver->new;
  my $query = $res->search($host);

  if ($query) {
    foreach my $rr ($query->answer) {
      next unless $rr->type eq "A";
      return($rr->address) ;
    }
  }
  return(undef)
}

sub eth0_ip {
  open(IFCONF, "/sbin/ifconfig eth0|") || die ;
  while(<IFCONF>) {
    if (/^ *inet addr:([0-9.]*) /) {
      return($1) ;
    }
  }
  close(IFCONF) || die ;
}

open (HOST, "/etc/hostname") || die ;
my $oldhost = <HOST> ;
chomp $oldhost;
close (HOST);

Newt::SetSuspendCallback(\&suspend_cb,undef);

# Panel example
Newt::Init();
Newt::Cls();
Newt::PushHelpLine();
Newt::DrawRootText(0, 0, "  --- idswitch: change the hostname and IP address of this system ---");
$domain_l = Newt::Label($newdomain);
$name_e = Newt::Entry(15, NEWT_FLAG_SCROLL, "");
$ip_e = Newt::Entry(15, 0, eth0_ip());
#$netmask_e = Newt::Entry(20, NEWT_FLAG_SCROLL, "255.255.0.0");
$netmask_l = Newt::Label(sprintf("%-15s", $newnetmask));
$network_l = Newt::Label("");
$bcast_l = Newt::Label("");
$gateway_e = Newt::Entry(15, 0, "");

sub name_cb {
  my($ip) ;

  if ($ip = hostlookup($name_e->Get() . "." . "lbwf.gov.uk")) {
    $ip_e->Set($ip, 1);
    ip_cb() ;
  }	
}
$name_e->AddCallback(\&name_cb);

sub ip_cb {
  my($net) ;

  if ($ip_e->Get() =~ /^(\d+\.\d+)./) {
    $network_l->Set($newnetwork = sprintf("%-15s", $1 . ".0.0"));
    $bcast_l->Set($newbcast = sprintf("%-15s", $1 . ".255.255"));
    $gateway_e->Set($1 . ".0.1", 1);
  }	
}
$ip_e->AddCallback(\&ip_cb);

$panel1 = Newt::Panel(1, 2, "Select new name and address");
$panel1
    ->Add(0,0, Newt::Panel(3, 6)
        ->Add(0, 0, Newt::Label("New Name:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 0, $name_e, NEWT_ANCHOR_RIGHT)
            ->Add(2, 0, $domain_l, NEWT_ANCHOR_RIGHT)
        ->Add(0, 1, Newt::Label("New IP:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 1, $ip_e, NEWT_ANCHOR_RIGHT)
        ->Add(0, 2, Newt::Label("Netmask:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 2, $netmask_l, NEWT_ANCHOR_RIGHT)
        ->Add(0, 3, Newt::Label("Network:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 3, $network_l, NEWT_ANCHOR_RIGHT)
        ->Add(0, 4, Newt::Label("Broadcast:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 4, $bcast_l, NEWT_ANCHOR_RIGHT)
        ->Add(0, 5, Newt::Label("Gateway:"), NEWT_ANCHOR_RIGHT,0,0,1,0)
          ->Add(1, 5, $gateway_e, NEWT_ANCHOR_RIGHT)
    )
    ->Add(0, 1, Newt::OK_CANCEL_PANEL);

ip_cb() ;
($reason, $data) = $panel1->Run();
Newt::Finished();

if ($reason == NEWT_EXIT_HOTKEY) {
  if ($data eq NEWT_KEY_F12) {
    print "F12 hotkey was pressed\n";
  } else {
    print "Some hotkey other than F12 was pressed\n";
  }
  exit (1) ;
}
else {
   print 'Form terminated by button ', $data->Tag(), "\n";
}

if ( $data->Tag() ne "OK" ) {
  exit 1 ;
}
print "Your name is ", $name_e->Get(), "\n";
print "Your IP address is ", $ip_e->Get(), "\n";


my $newhost = $name_e->Get();
my $newip = $ip_e->Get();
my $newmask = "255.255.0.0" ;
my $newgateway = $gateway_e->Get();
my $newmask = "255.255.0.0" ;

$newip =~ /^(\d+\.\d+)\./ || die ;
$newbcast="$1" . ".255.255" ;
$newnet="$1" . ".0.0" ;

#printf "%s --> %s (%s/%s|%s|%s)\n", $oldhost, $newhost, $newip, $newmask, $newbcast, $newnet ;

my @edited_files = () ;

sub edit_file {
  my($edit_func, $file) = @_ ;
  open(OLD, "$file") || return (False) ;
  open(NEW, ">$file.NEW-$$") || die ;

  &{ $edit_func }(\*OLD, \*NEW) ;

  close(NEW) || die ;
  close(OLD) || die ;

  push @edited_files, $file ;
  return (True) ;
}

sub overwrite_old_with_new {
  foreach (@edited_files) {
    rename "$_.NEW-$$", "$_" ;
  }
}

sub tweak_hostname {
  my($old, $new) = @_ ;
  printf $new "%s\n", $newhost ;
}

sub tweak_interfaces {
  my($old, $new) = @_ ;
  while (<$old>) {
    if (/^iface\s+eth0\s+/) {
      if (/^iface\s+eth0\s+inet\s+static\s*$/) {
        while (<$old>) {
          last if /^(auto|iface|mapping)\s+/ ;
        }
      }
      print  $new "iface eth0 inet static\n" ;
      printf $new "    address %s\n", $newip ;
      printf $new "    network %s\n", $newnetwork ;
      printf $new "    netmask %s\n", $newnetmask ;
      printf $new "    broadcast %s\n", $newbcast ;
      printf $new "    gateway %s\n", $newgateway ;
      printf $new "    #up mii-tool -F 100baseTx-FD eth0\n", $newgateway ;
      print  $new "\n" ;

      next ;
    }
    print $new $_ ;
  }
}

sub tweak_hosts {
  my($old, $new) = @_ ;
  while (<$old>) {
    if (/^127.0.0.1\s+/) {
      print  $new "127.0.0.1\tlocalhost\n" ;
      print  $new "$newip\t$newhost.$newdomain\t$newhost\n" ;
      next ;
    }
    if (/[0-9.]+\s+$oldhost\b/) {
      next ;
    }
    print $new $_ ;
  }
}

sub tweak_ssmtp {
  my($old, $new) = @_ ;
  while (<$old>) {
    s/^hostname=.*$/hostname=$newhost.$newdomain/ ;
    print $new $_ ;
  }
}

sub replace_host {
  my($old, $new) = @_ ;
  while (<$old>) {
    s/\b$oldhost\b/$newhost/ ;
    print $new $_ ;
  }
}


edit_file(\&tweak_hostname, "/etc/hostname") || die ;
edit_file(\&tweak_interfaces, "/etc/network/interfaces") || die ;
edit_file(\&tweak_hosts, "/etc/hosts") || die ;
edit_file(\&replace_host, "/etc/motd") || die ;
edit_file(\&tweak_ssmtp, "/etc/ssmtp/ssmtp.conf") || print STDERR "error editing /etc/ssmtp/ssmtp.conf\n" ;

system("/etc/init.d/networking stop") ;

overwrite_old_with_new() ;

system("/etc/init.d/hostname.sh restart") ;
system("/etc/init.d/networking start") ;
# edit resolv.conf if domain editing ever happens
