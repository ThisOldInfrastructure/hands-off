#!/bin/sh
#
# Copyright (c) 2005-2006 Hands.com Ltd
# distributed under the terms of the GNU GPL version 2 or (at your option) any later version
# see the file "COPYING" for details

set -e

log() {
    logger -t early_script "$@"
}
in_local_class() {
    echo "$(debconf-get dsd/classes)" | sed -e 's/;/\n/g' | grep -q "^$1\$"
}
local_classes() {
    echo "$(debconf-get dsd/classes)" | sed -e 's/;/\n/g'
}

log "debug: Running script from $location"

set -x

# script to restart the install -- handy for testing
{
  echo "#!/bin/sh"
  echo "dd if=/dev/zero of=/dev/discs/disc0/disc count=1 && sync && reboot"
} > /usr/bin/zapme
chmod +x /usr/bin/zapme

# package to allow packages to be excluded from the base install
BSW_VER=0.2
dsd_fetch_file udebs/bootstrapwrap_${BSW_VER}_all.udeb /tmp/bootstrapwrap_${BSW_VER}_all.udeb &&
  udpkg -i /tmp/bootstrapwrap_${BSW_VER}_all.udeb &&
  rm /tmp/bootstrapwrap_${BSW_VER}_all.udeb
# get the base_in/exclude stuff in place for bootstrapwrap
for f in base_include base_exclude ; do
  # provide backward compatibility on USB sticks -- probably best ignored
  if [ -f /hd-media/$f ] ; then
    cp /hd-media/$f /
  else
    INEXCLUDE_URL="dsd/$f"
    dsd_fetch_file ${INEXCLUDE_URL} /$f || log "warning: .../${INEXCLUDE_URL} not found"
  fi
done

# chain onto class specific late_script(s) if any
for class in $(local_classes); do
  CLASS_EARLY_URL="dsd/${class}/early_script"
  dsd_fetch_file ${CLASS_EARLY_URL} /tmp/early_script-${class} || \
    log "warning: .../${CLASS_EARLY_URL} not found"

  if [ -e /tmp/early_script-${class} ] ; then
    chmod +x /tmp/early_script-${class}
    /tmp/early_script-${class} > /var/log/early_script-${class}.out 2>&1
  fi
done

log "debug: ends successfully"
